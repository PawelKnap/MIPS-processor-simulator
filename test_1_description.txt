JUMP1:	R1=3; //immediate addition R1=R0+3;
	R5=R1 ^ 6; //immediate XOR R5=5
	R3=R1 & 6; //immediate AND R3=2
	R2=5; //immediate addition R2=R0+5;
	R4= R2 | 9 //immediate OR R4=13
	sw R1,7; //store register R1 in memory address 7
JUMP2: 	R12=R12 + 1; //increment R12 by 1
	be R12,R3,JUMP1; //branch if R12=R3
	R6=R1 + R5; //addition R6=8
	R7=R1 - R5; //subtraction R7=-2
	R8=R1 & R5; //AND R8=1
	R9=R1 | R5; //OR R9=7
	R10=R1 ^ R5; //XOR R10=6
	lw R11,7; //R11=3
	bne R12,R5,JUMP2; //branch if R12!=R5


